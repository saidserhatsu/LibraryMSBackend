// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistence.Contexts;

#nullable disable

namespace Persistence.Migrations
{
    [DbContext(typeof(BaseDbContext))]
    [Migration("20240508092932_sss")]
    partial class sss
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entities.Announcement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Content");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ImageUrl");

                    b.Property<int>("Tag")
                        .HasColumnType("int")
                        .HasColumnName("Tag");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Title");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Id");

                    b.ToTable("Announcements", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("0e19a5be-6546-4c5a-9340-cf1e1748b1b1"),
                            Content = "Content 1",
                            CreatedDate = new DateTime(2024, 5, 8, 9, 29, 31, 514, DateTimeKind.Utc).AddTicks(1880),
                            ImageUrl = "https://res.cloudinary.com/dafqsbtn7/image/upload/v1714736430/ouaussgfi9enxrecymah.jpg",
                            Tag = 0,
                            Title = "Kütüphane Üyelikleri"
                        },
                        new
                        {
                            Id = new Guid("e014efc4-0973-4fc1-80bb-464b4d791173"),
                            Content = "Content 2",
                            CreatedDate = new DateTime(2024, 5, 8, 9, 29, 31, 514, DateTimeKind.Utc).AddTicks(1885),
                            ImageUrl = "https://res.cloudinary.com/dafqsbtn7/image/upload/v1714736430/ouaussgfi9enxrecymah.jpg",
                            Tag = 1,
                            Title = "Hıdırellez Yarışması"
                        },
                        new
                        {
                            Id = new Guid("f4710162-5b4a-4dfe-9bcf-8951ec64b55e"),
                            Content = "Content 3",
                            CreatedDate = new DateTime(2024, 5, 8, 9, 29, 31, 514, DateTimeKind.Utc).AddTicks(1887),
                            ImageUrl = "https://res.cloudinary.com/dafqsbtn7/image/upload/v1714736430/ouaussgfi9enxrecymah.jpg",
                            Tag = 2,
                            Title = "Yeni Kitaplar"
                        },
                        new
                        {
                            Id = new Guid("bf3669a9-a784-4941-bf6e-4893374abb2b"),
                            Content = "Content 4",
                            CreatedDate = new DateTime(2024, 5, 8, 9, 29, 31, 514, DateTimeKind.Utc).AddTicks(1891),
                            ImageUrl = "https://res.cloudinary.com/dafqsbtn7/image/upload/v1714736430/ouaussgfi9enxrecymah.jpg",
                            Tag = 1,
                            Title = "Yeni Yıl Etkinliği"
                        },
                        new
                        {
                            Id = new Guid("9c6c985f-b331-4a85-bee5-c7d2a9d57073"),
                            Content = "Content 5",
                            CreatedDate = new DateTime(2024, 5, 8, 9, 29, 31, 514, DateTimeKind.Utc).AddTicks(1893),
                            ImageUrl = "https://res.cloudinary.com/dafqsbtn7/image/upload/v1714736430/ouaussgfi9enxrecymah.jpg",
                            Tag = 1,
                            Title = "Bayramlaşma"
                        },
                        new
                        {
                            Id = new Guid("7085aa16-5230-42ca-941b-6d73c692053b"),
                            Content = "Content 6",
                            CreatedDate = new DateTime(2024, 5, 8, 9, 29, 31, 514, DateTimeKind.Utc).AddTicks(1894),
                            ImageUrl = "https://res.cloudinary.com/dafqsbtn7/image/upload/v1714736430/ouaussgfi9enxrecymah.jpg",
                            Tag = 0,
                            Title = "Kütüphane Açılış Saatleri"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Author", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("FirstName");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("LastName");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Id");

                    b.ToTable("Authors", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("999b5ec6-5d88-437c-a6a8-8f397772acd3"),
                            CreatedDate = new DateTime(2024, 5, 8, 9, 29, 31, 514, DateTimeKind.Utc).AddTicks(4218),
                            FirstName = "Mustafa Kemal",
                            LastName = "Atatürk"
                        },
                        new
                        {
                            Id = new Guid("24a402a9-46e6-42f7-9d18-27ed258b8418"),
                            CreatedDate = new DateTime(2024, 5, 8, 9, 29, 31, 514, DateTimeKind.Utc).AddTicks(4221),
                            FirstName = "Fyodor",
                            LastName = "Dostoyevski"
                        },
                        new
                        {
                            Id = new Guid("f52bd761-cef2-4728-b3a3-b8e1aaa86710"),
                            CreatedDate = new DateTime(2024, 5, 8, 9, 29, 31, 514, DateTimeKind.Utc).AddTicks(4223),
                            FirstName = "Sun",
                            LastName = "Tzu"
                        },
                        new
                        {
                            Id = new Guid("bfcb46ec-fce6-4305-84fd-8453a0c032c2"),
                            CreatedDate = new DateTime(2024, 5, 8, 9, 29, 31, 514, DateTimeKind.Utc).AddTicks(4225),
                            FirstName = "Orkun",
                            LastName = "Uçar"
                        },
                        new
                        {
                            Id = new Guid("0a0a0651-d2f9-4c37-a91d-334d850c23db"),
                            CreatedDate = new DateTime(2024, 5, 8, 9, 29, 31, 514, DateTimeKind.Utc).AddTicks(4227),
                            FirstName = "Burak",
                            LastName = "Turna"
                        },
                        new
                        {
                            Id = new Guid("7d9fbe1e-67b2-4911-bb06-47b042e2245b"),
                            CreatedDate = new DateTime(2024, 5, 8, 9, 29, 31, 514, DateTimeKind.Utc).AddTicks(4229),
                            FirstName = "Sabahattin",
                            LastName = "Ali"
                        },
                        new
                        {
                            Id = new Guid("283ba145-e4a5-4e21-8ae3-4a52cd44d399"),
                            CreatedDate = new DateTime(2024, 5, 8, 9, 29, 31, 514, DateTimeKind.Utc).AddTicks(4260),
                            FirstName = "Oğuz",
                            LastName = "Atay"
                        },
                        new
                        {
                            Id = new Guid("ac24c21b-f665-4350-8129-9be9f02c2791"),
                            CreatedDate = new DateTime(2024, 5, 8, 9, 29, 31, 514, DateTimeKind.Utc).AddTicks(4262),
                            FirstName = "Yusuf",
                            LastName = "Atılgan"
                        },
                        new
                        {
                            Id = new Guid("2bae52f5-6e58-4071-b79c-da1cba7f560b"),
                            CreatedDate = new DateTime(2024, 5, 8, 9, 29, 31, 514, DateTimeKind.Utc).AddTicks(4265),
                            FirstName = "Vedat",
                            LastName = "Türkali"
                        },
                        new
                        {
                            Id = new Guid("64919748-c9e3-423b-a9e0-51652edb5fba"),
                            CreatedDate = new DateTime(2024, 5, 8, 9, 29, 31, 514, DateTimeKind.Utc).AddTicks(4268),
                            FirstName = "Jack",
                            LastName = "London"
                        },
                        new
                        {
                            Id = new Guid("b5517ee6-ca04-4e72-96cf-a1f9d4a9954e"),
                            CreatedDate = new DateTime(2024, 5, 8, 9, 29, 31, 514, DateTimeKind.Utc).AddTicks(4269),
                            FirstName = "Reşat Nuri",
                            LastName = "Güntekin"
                        },
                        new
                        {
                            Id = new Guid("c5b259fb-a635-48b3-9a92-6155c317bc68"),
                            CreatedDate = new DateTime(2024, 5, 8, 9, 29, 31, 514, DateTimeKind.Utc).AddTicks(4271),
                            FirstName = "Yaşar",
                            LastName = "Kemal"
                        },
                        new
                        {
                            Id = new Guid("e8e83303-6ab3-4cb7-9573-7be6ab4d1a21"),
                            CreatedDate = new DateTime(2024, 5, 8, 9, 29, 31, 514, DateTimeKind.Utc).AddTicks(4273),
                            FirstName = "Emrah",
                            LastName = "Serbes"
                        },
                        new
                        {
                            Id = new Guid("e88f8263-c7f6-4c96-aa5e-969bbc7c7e34"),
                            CreatedDate = new DateTime(2024, 5, 8, 9, 29, 31, 514, DateTimeKind.Utc).AddTicks(4275),
                            FirstName = "Grigory",
                            LastName = "Petrov"
                        },
                        new
                        {
                            Id = new Guid("8f75fb32-c516-4c3a-8a96-fa98aede126b"),
                            CreatedDate = new DateTime(2024, 5, 8, 9, 29, 31, 514, DateTimeKind.Utc).AddTicks(4276),
                            FirstName = "Ahmet Hamdi",
                            LastName = "Tanpınar"
                        },
                        new
                        {
                            Id = new Guid("46a0ae1a-b4d4-49fa-bc99-302b29a4b7f5"),
                            CreatedDate = new DateTime(2024, 5, 8, 9, 29, 31, 514, DateTimeKind.Utc).AddTicks(4278),
                            FirstName = "Aziz",
                            LastName = "Nesin"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Book", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<int>("BookEdition")
                        .HasColumnType("int")
                        .HasColumnName("BookEdition");

                    b.Property<string>("BookTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("BookTitle");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int")
                        .HasColumnName("CategoryId");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<string>("ISBNCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ISBNCode");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ImageUrl");

                    b.Property<Guid>("LocationId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LocationId");

                    b.Property<int>("PageCount")
                        .HasColumnType("int")
                        .HasColumnName("PageCount");

                    b.Property<Guid>("PublisherId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("PublisherId");

                    b.Property<int>("ReleaseDate")
                        .HasColumnType("int")
                        .HasColumnName("ReleaseDate");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("Status");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("LocationId");

                    b.HasIndex("PublisherId");

                    b.ToTable("Books", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("55349e9b-304e-4ede-b5d3-b82d2eb2fbc7"),
                            BookEdition = 1,
                            BookTitle = "Yaşar Ne Yaşar Ne Yaşamaz",
                            CategoryId = 3,
                            CreatedDate = new DateTime(2024, 5, 8, 9, 29, 31, 515, DateTimeKind.Utc).AddTicks(4529),
                            ISBNCode = "9789759038472",
                            ImageUrl = "https://res.cloudinary.com/dafqsbtn7/image/upload/v1714568273/ekcesgl02ump0lq0mcoj.png",
                            LocationId = new Guid("57cac248-2a17-43bf-a584-9d2e7e966457"),
                            PageCount = 343,
                            PublisherId = new Guid("cbb7895d-a862-459c-9622-2a2f3f5be99e"),
                            ReleaseDate = 1977,
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("1aa5427d-24ac-48ae-8788-a5d8102056eb"),
                            BookEdition = 1,
                            BookTitle = "Nutuk",
                            CategoryId = 2,
                            CreatedDate = new DateTime(2024, 5, 8, 9, 29, 31, 515, DateTimeKind.Utc).AddTicks(4535),
                            ISBNCode = "9789944888349",
                            ImageUrl = "https://res.cloudinary.com/dafqsbtn7/image/upload/v1714568273/ekcesgl02ump0lq0mcoj.png",
                            LocationId = new Guid("66a89aa8-e8ad-4add-8ec8-df9d372e4833"),
                            PageCount = 343,
                            PublisherId = new Guid("cbb7895d-a862-459c-9622-2a2f3f5be99e"),
                            ReleaseDate = 1977,
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("d1d16714-3328-42bd-a2b3-53fe5e03cb41"),
                            BookEdition = 1,
                            BookTitle = "Saatleri Ayarlama Enstitüsü",
                            CategoryId = 3,
                            CreatedDate = new DateTime(2024, 5, 8, 9, 29, 31, 515, DateTimeKind.Utc).AddTicks(4539),
                            ISBNCode = "9786051414315",
                            ImageUrl = "https://res.cloudinary.com/dafqsbtn7/image/upload/v1714568273/ekcesgl02ump0lq0mcoj.png",
                            LocationId = new Guid("57cac248-2a17-43bf-a584-9d2e7e966457"),
                            PageCount = 420,
                            PublisherId = new Guid("cbb7895d-a862-459c-9622-2a2f3f5be99e"),
                            ReleaseDate = 1961,
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("8214333a-6ddd-4c4c-8803-dd2efd58cd64"),
                            BookEdition = 1,
                            BookTitle = "Kürk Mantolu Madonna",
                            CategoryId = 3,
                            CreatedDate = new DateTime(2024, 5, 8, 9, 29, 31, 515, DateTimeKind.Utc).AddTicks(4542),
                            ISBNCode = "9789754700114",
                            ImageUrl = "https://res.cloudinary.com/dafqsbtn7/image/upload/v1714568273/ekcesgl02ump0lq0mcoj.png",
                            LocationId = new Guid("57cac248-2a17-43bf-a584-9d2e7e966457"),
                            PageCount = 168,
                            PublisherId = new Guid("cbb7895d-a862-459c-9622-2a2f3f5be99e"),
                            ReleaseDate = 1943,
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("9a315107-d02c-4d47-ab72-b48b3cfc0d56"),
                            BookEdition = 1,
                            BookTitle = "Tutunamayanlar",
                            CategoryId = 3,
                            CreatedDate = new DateTime(2024, 5, 8, 9, 29, 31, 515, DateTimeKind.Utc).AddTicks(4546),
                            ISBNCode = "9789750812705",
                            ImageUrl = "https://res.cloudinary.com/dafqsbtn7/image/upload/v1714568273/ekcesgl02ump0lq0mcoj.png",
                            LocationId = new Guid("57cac248-2a17-43bf-a584-9d2e7e966457"),
                            PageCount = 712,
                            PublisherId = new Guid("9acb5f4c-966e-44a4-8ddb-9fe31fa0090e"),
                            ReleaseDate = 1972,
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("399c68e7-f2ce-4416-893c-946dd3696ed3"),
                            BookEdition = 1,
                            BookTitle = "Aylak Adam",
                            CategoryId = 3,
                            CreatedDate = new DateTime(2024, 5, 8, 9, 29, 31, 515, DateTimeKind.Utc).AddTicks(4550),
                            ISBNCode = "9789750805158",
                            ImageUrl = "https://res.cloudinary.com/dafqsbtn7/image/upload/v1714568273/ekcesgl02ump0lq0mcoj.png",
                            LocationId = new Guid("57cac248-2a17-43bf-a584-9d2e7e966457"),
                            PageCount = 176,
                            PublisherId = new Guid("9acb5f4c-966e-44a4-8ddb-9fe31fa0090e"),
                            ReleaseDate = 1959,
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("81e99a97-2bfd-4754-9637-978b162bd04e"),
                            BookEdition = 1,
                            BookTitle = "Bir Gün Tek Başına",
                            CategoryId = 3,
                            CreatedDate = new DateTime(2024, 5, 8, 9, 29, 31, 515, DateTimeKind.Utc).AddTicks(4553),
                            ISBNCode = "9789750736056",
                            ImageUrl = "https://res.cloudinary.com/dafqsbtn7/image/upload/v1714568273/ekcesgl02ump0lq0mcoj.png",
                            LocationId = new Guid("57cac248-2a17-43bf-a584-9d2e7e966457"),
                            PageCount = 424,
                            PublisherId = new Guid("9acb5f4c-966e-44a4-8ddb-9fe31fa0090e"),
                            ReleaseDate = 1974,
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("48f650e8-1cc9-4bac-a77c-59b4b6056dc7"),
                            BookEdition = 1,
                            BookTitle = "Beyaz Diş",
                            CategoryId = 3,
                            CreatedDate = new DateTime(2024, 5, 8, 9, 29, 31, 515, DateTimeKind.Utc).AddTicks(4557),
                            ISBNCode = "9786052954018",
                            ImageUrl = "https://res.cloudinary.com/dafqsbtn7/image/upload/v1714568273/ekcesgl02ump0lq0mcoj.png",
                            LocationId = new Guid("57cac248-2a17-43bf-a584-9d2e7e966457"),
                            PageCount = 240,
                            PublisherId = new Guid("65584687-00c3-4673-b2da-d7c287e12a7c"),
                            ReleaseDate = 1906,
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("0ac0f60e-20d3-47d0-982e-2d642c19e704"),
                            BookEdition = 1,
                            BookTitle = "Çalıkuşu",
                            CategoryId = 3,
                            CreatedDate = new DateTime(2024, 5, 8, 9, 29, 31, 515, DateTimeKind.Utc).AddTicks(4560),
                            ISBNCode = "9786051414315",
                            ImageUrl = "https://res.cloudinary.com/dafqsbtn7/image/upload/v1714568273/ekcesgl02ump0lq0mcoj.png",
                            LocationId = new Guid("57cac248-2a17-43bf-a584-9d2e7e966457"),
                            PageCount = 280,
                            PublisherId = new Guid("65584687-00c3-4673-b2da-d7c287e12a7c"),
                            ReleaseDate = 1922,
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("2e73afc5-80d2-4549-bab8-02b69762dd04"),
                            BookEdition = 1,
                            BookTitle = "İnce Memed",
                            CategoryId = 3,
                            CreatedDate = new DateTime(2024, 5, 8, 9, 29, 31, 515, DateTimeKind.Utc).AddTicks(4564),
                            ISBNCode = "9789754709117",
                            ImageUrl = "https://res.cloudinary.com/dafqsbtn7/image/upload/v1714568273/ekcesgl02ump0lq0mcoj.png",
                            LocationId = new Guid("57cac248-2a17-43bf-a584-9d2e7e966457"),
                            PageCount = 440,
                            PublisherId = new Guid("65584687-00c3-4673-b2da-d7c287e12a7c"),
                            ReleaseDate = 1955,
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("c776b453-d81f-4d5b-82af-845fcd3b08fb"),
                            BookEdition = 1,
                            BookTitle = "Gülşah",
                            CategoryId = 3,
                            CreatedDate = new DateTime(2024, 5, 8, 9, 29, 31, 515, DateTimeKind.Utc).AddTicks(4596),
                            ISBNCode = "9789750718352",
                            ImageUrl = "https://res.cloudinary.com/dafqsbtn7/image/upload/v1714568273/ekcesgl02ump0lq0mcoj.png",
                            LocationId = new Guid("57cac248-2a17-43bf-a584-9d2e7e966457"),
                            PageCount = 360,
                            PublisherId = new Guid("65584687-00c3-4673-b2da-d7c287e12a7c"),
                            ReleaseDate = 1985,
                            Status = 1
                        });
                });

            modelBuilder.Entity("Domain.Entities.BookAuthor", b =>
                {
                    b.Property<Guid>("BookId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BookId");

                    b.Property<Guid>("AuthorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("AuthorId");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("BookId", "AuthorId");

                    b.HasIndex("AuthorId");

                    b.ToTable("BookAuthors", (string)null);

                    b.HasData(
                        new
                        {
                            BookId = new Guid("55349e9b-304e-4ede-b5d3-b82d2eb2fbc7"),
                            AuthorId = new Guid("46a0ae1a-b4d4-49fa-bc99-302b29a4b7f5"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Id = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            BookId = new Guid("1aa5427d-24ac-48ae-8788-a5d8102056eb"),
                            AuthorId = new Guid("999b5ec6-5d88-437c-a6a8-8f397772acd3"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Id = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            BookId = new Guid("d1d16714-3328-42bd-a2b3-53fe5e03cb41"),
                            AuthorId = new Guid("8f75fb32-c516-4c3a-8a96-fa98aede126b"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Id = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            BookId = new Guid("8214333a-6ddd-4c4c-8803-dd2efd58cd64"),
                            AuthorId = new Guid("7d9fbe1e-67b2-4911-bb06-47b042e2245b"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Id = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            BookId = new Guid("9a315107-d02c-4d47-ab72-b48b3cfc0d56"),
                            AuthorId = new Guid("283ba145-e4a5-4e21-8ae3-4a52cd44d399"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Id = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            BookId = new Guid("399c68e7-f2ce-4416-893c-946dd3696ed3"),
                            AuthorId = new Guid("ac24c21b-f665-4350-8129-9be9f02c2791"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Id = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            BookId = new Guid("81e99a97-2bfd-4754-9637-978b162bd04e"),
                            AuthorId = new Guid("2bae52f5-6e58-4071-b79c-da1cba7f560b"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Id = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            BookId = new Guid("48f650e8-1cc9-4bac-a77c-59b4b6056dc7"),
                            AuthorId = new Guid("64919748-c9e3-423b-a9e0-51652edb5fba"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Id = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            BookId = new Guid("0ac0f60e-20d3-47d0-982e-2d642c19e704"),
                            AuthorId = new Guid("b5517ee6-ca04-4e72-96cf-a1f9d4a9954e"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Id = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            BookId = new Guid("2e73afc5-80d2-4549-bab8-02b69762dd04"),
                            AuthorId = new Guid("c5b259fb-a635-48b3-9a92-6155c317bc68"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Id = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            BookId = new Guid("c776b453-d81f-4d5b-82af-845fcd3b08fb"),
                            AuthorId = new Guid("e8e83303-6ab3-4cb7-9573-7be6ab4d1a21"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Id = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("Domain.Entities.BookIssue", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<Guid>("BookId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BookId");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<Guid>("LibraryStaffId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LibraryStaffId");

                    b.Property<Guid>("MemberId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("MemberId");

                    b.Property<DateTime>("ReturnDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("ReturnDate");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.HasIndex("LibraryStaffId");

                    b.HasIndex("MemberId");

                    b.ToTable("BookIssues", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.BookReservation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<Guid>("BookId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BookId");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<Guid>("MemberId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("MemberId");

                    b.Property<DateTime>("NearestAvailableDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("NearestAvailableDate");

                    b.Property<DateTime>("RequestDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("RequestDate");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.HasIndex("MemberId");

                    b.ToTable("BookReservations", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Catalog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Name");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Id");

                    b.ToTable("Catalogs", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("e2ddf880-692a-4dc6-9919-4ddf57f01daf"),
                            CreatedDate = new DateTime(2024, 5, 8, 12, 29, 31, 516, DateTimeKind.Local).AddTicks(6213),
                            Name = "Kişisel Gelişim Kataloğu"
                        },
                        new
                        {
                            Id = new Guid("4d0896cc-92ba-4f69-9837-62bf1e2e1b8d"),
                            CreatedDate = new DateTime(2024, 5, 8, 12, 29, 31, 516, DateTimeKind.Local).AddTicks(6225),
                            Name = "Dünya Coğrafyası Kataloğu"
                        },
                        new
                        {
                            Id = new Guid("b5cad88a-dbbc-441c-a095-e9957d4fa286"),
                            CreatedDate = new DateTime(2024, 5, 8, 12, 29, 31, 516, DateTimeKind.Local).AddTicks(6227),
                            Name = "Edebiyat ve Roman Kataloğu"
                        },
                        new
                        {
                            Id = new Guid("398c79ce-2501-475e-b86f-0959b89e73ad"),
                            CreatedDate = new DateTime(2024, 5, 8, 12, 29, 31, 516, DateTimeKind.Local).AddTicks(6228),
                            Name = "Tarih ve Tarihî Eserler Kataloğu"
                        },
                        new
                        {
                            Id = new Guid("834183d5-be5d-4701-8b65-9593f2839066"),
                            CreatedDate = new DateTime(2024, 5, 8, 12, 29, 31, 516, DateTimeKind.Local).AddTicks(6230),
                            Name = "Bilim ve Teknoloji Kataloğu"
                        },
                        new
                        {
                            Id = new Guid("429824df-e22f-4ca1-b8de-1eaa320a68b7"),
                            CreatedDate = new DateTime(2024, 5, 8, 12, 29, 31, 516, DateTimeKind.Local).AddTicks(6231),
                            Name = "Sanat ve Kültür Kataloğu"
                        },
                        new
                        {
                            Id = new Guid("4dbc633a-ab1b-4a55-b159-d3dd1249b6cd"),
                            CreatedDate = new DateTime(2024, 5, 8, 12, 29, 31, 516, DateTimeKind.Local).AddTicks(6233),
                            Name = "Psikoloji Kataloğu"
                        },
                        new
                        {
                            Id = new Guid("23182d33-1ebf-4a74-a93d-0c63cd2047a2"),
                            CreatedDate = new DateTime(2024, 5, 8, 12, 29, 31, 516, DateTimeKind.Local).AddTicks(6234),
                            Name = "Ekonomi ve Finans Kataloğu"
                        },
                        new
                        {
                            Id = new Guid("cf491419-601d-4bde-9b46-0e610589a4d7"),
                            CreatedDate = new DateTime(2024, 5, 8, 12, 29, 31, 516, DateTimeKind.Local).AddTicks(6236),
                            Name = "Felsefe ve Din Kataloğu"
                        },
                        new
                        {
                            Id = new Guid("fd64bb44-8a22-46b5-a573-bcd9629d3fd1"),
                            CreatedDate = new DateTime(2024, 5, 8, 12, 29, 31, 516, DateTimeKind.Local).AddTicks(6237),
                            Name = "Çocuk ve Gençlik Kitapları Kataloğu"
                        },
                        new
                        {
                            Id = new Guid("35c235e3-95c5-4fd4-b0a1-93a730d9f839"),
                            CreatedDate = new DateTime(2024, 5, 8, 12, 29, 31, 516, DateTimeKind.Local).AddTicks(6238),
                            Name = "Bilişim"
                        });
                });

            modelBuilder.Entity("Domain.Entities.CatalogManagement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<Guid?>("BookId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BookId");

                    b.Property<Guid>("CatalogId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CatalogId");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<Guid?>("EBookId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("EBookId");

                    b.Property<Guid?>("MagazineId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("MagazineId");

                    b.Property<Guid?>("MaterialId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("MaterialId");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.HasIndex("CatalogId");

                    b.HasIndex("EBookId");

                    b.HasIndex("MagazineId");

                    b.HasIndex("MaterialId");

                    b.ToTable("CatalogManagements", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Name");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Id");

                    b.ToTable("Categories", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2024, 5, 8, 9, 29, 31, 517, DateTimeKind.Utc).AddTicks(6586),
                            Name = "Edebiyat"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2024, 5, 8, 9, 29, 31, 517, DateTimeKind.Utc).AddTicks(6588),
                            Name = "Tarih"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2024, 5, 8, 9, 29, 31, 517, DateTimeKind.Utc).AddTicks(6589),
                            Name = "Roman"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2024, 5, 8, 9, 29, 31, 517, DateTimeKind.Utc).AddTicks(6591),
                            Name = "Psikoloji"
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2024, 5, 8, 9, 29, 31, 517, DateTimeKind.Utc).AddTicks(6592),
                            Name = "Felsefe"
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(2024, 5, 8, 9, 29, 31, 517, DateTimeKind.Utc).AddTicks(6595),
                            Name = "Bilim Kurgu"
                        },
                        new
                        {
                            Id = 7,
                            CreatedDate = new DateTime(2024, 5, 8, 9, 29, 31, 517, DateTimeKind.Utc).AddTicks(6661),
                            Name = "Fantastik"
                        },
                        new
                        {
                            Id = 8,
                            CreatedDate = new DateTime(2024, 5, 8, 9, 29, 31, 517, DateTimeKind.Utc).AddTicks(6663),
                            Name = "Polisiye"
                        },
                        new
                        {
                            Id = 9,
                            CreatedDate = new DateTime(2024, 5, 8, 9, 29, 31, 517, DateTimeKind.Utc).AddTicks(6665),
                            Name = "Macera"
                        },
                        new
                        {
                            Id = 10,
                            CreatedDate = new DateTime(2024, 5, 8, 9, 29, 31, 517, DateTimeKind.Utc).AddTicks(6666),
                            Name = "Aşk"
                        },
                        new
                        {
                            Id = 11,
                            CreatedDate = new DateTime(2024, 5, 8, 9, 29, 31, 517, DateTimeKind.Utc).AddTicks(6667),
                            Name = "Çocuk"
                        },
                        new
                        {
                            Id = 12,
                            CreatedDate = new DateTime(2024, 5, 8, 9, 29, 31, 517, DateTimeKind.Utc).AddTicks(6669),
                            Name = "Biyografi"
                        },
                        new
                        {
                            Id = 13,
                            CreatedDate = new DateTime(2024, 5, 8, 9, 29, 31, 517, DateTimeKind.Utc).AddTicks(6670),
                            Name = "Otobiyografi"
                        },
                        new
                        {
                            Id = 14,
                            CreatedDate = new DateTime(2024, 5, 8, 9, 29, 31, 517, DateTimeKind.Utc).AddTicks(6672),
                            Name = "Gezi"
                        },
                        new
                        {
                            Id = 15,
                            CreatedDate = new DateTime(2024, 5, 8, 9, 29, 31, 517, DateTimeKind.Utc).AddTicks(6674),
                            Name = "Sanat"
                        },
                        new
                        {
                            Id = 16,
                            CreatedDate = new DateTime(2024, 5, 8, 9, 29, 31, 517, DateTimeKind.Utc).AddTicks(6676),
                            Name = "Mimari"
                        },
                        new
                        {
                            Id = 17,
                            CreatedDate = new DateTime(2024, 5, 8, 9, 29, 31, 517, DateTimeKind.Utc).AddTicks(6677),
                            Name = "Müzik"
                        },
                        new
                        {
                            Id = 18,
                            CreatedDate = new DateTime(2024, 5, 8, 9, 29, 31, 517, DateTimeKind.Utc).AddTicks(6678),
                            Name = "Tiyatro"
                        },
                        new
                        {
                            Id = 19,
                            CreatedDate = new DateTime(2024, 5, 8, 9, 29, 31, 517, DateTimeKind.Utc).AddTicks(6680),
                            Name = "Dans"
                        },
                        new
                        {
                            Id = 20,
                            CreatedDate = new DateTime(2024, 5, 8, 9, 29, 31, 517, DateTimeKind.Utc).AddTicks(6681),
                            Name = "Sinema"
                        },
                        new
                        {
                            Id = 21,
                            CreatedDate = new DateTime(2024, 5, 8, 9, 29, 31, 517, DateTimeKind.Utc).AddTicks(6683),
                            Name = "Şiir"
                        },
                        new
                        {
                            Id = 22,
                            CreatedDate = new DateTime(2024, 5, 8, 9, 29, 31, 517, DateTimeKind.Utc).AddTicks(6684),
                            Name = "Antoloji"
                        },
                        new
                        {
                            Id = 23,
                            CreatedDate = new DateTime(2024, 5, 8, 9, 29, 31, 517, DateTimeKind.Utc).AddTicks(6685),
                            Name = "Yemek"
                        },
                        new
                        {
                            Id = 24,
                            CreatedDate = new DateTime(2024, 5, 8, 9, 29, 31, 517, DateTimeKind.Utc).AddTicks(6687),
                            Name = "Sağlık"
                        },
                        new
                        {
                            Id = 25,
                            CreatedDate = new DateTime(2024, 5, 8, 9, 29, 31, 517, DateTimeKind.Utc).AddTicks(6688),
                            Name = "Tıp"
                        },
                        new
                        {
                            Id = 26,
                            CreatedDate = new DateTime(2024, 5, 8, 9, 29, 31, 517, DateTimeKind.Utc).AddTicks(6689),
                            Name = "Eğitim"
                        },
                        new
                        {
                            Id = 27,
                            CreatedDate = new DateTime(2024, 5, 8, 9, 29, 31, 517, DateTimeKind.Utc).AddTicks(6691),
                            Name = "Ekonomi"
                        },
                        new
                        {
                            Id = 28,
                            CreatedDate = new DateTime(2024, 5, 8, 9, 29, 31, 517, DateTimeKind.Utc).AddTicks(6692),
                            Name = "İş Dünyası"
                        },
                        new
                        {
                            Id = 29,
                            CreatedDate = new DateTime(2024, 5, 8, 9, 29, 31, 517, DateTimeKind.Utc).AddTicks(6696),
                            Name = "Hukuk"
                        },
                        new
                        {
                            Id = 30,
                            CreatedDate = new DateTime(2024, 5, 8, 9, 29, 31, 517, DateTimeKind.Utc).AddTicks(6723),
                            Name = "Politika"
                        },
                        new
                        {
                            Id = 31,
                            CreatedDate = new DateTime(2024, 5, 8, 9, 29, 31, 517, DateTimeKind.Utc).AddTicks(6725),
                            Name = "Kişisel Gelişim"
                        });
                });

            modelBuilder.Entity("Domain.Entities.EBook", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("AuthorName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("AuthorName");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int")
                        .HasColumnName("CategoryId");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<string>("EBookTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("EBookTitle");

                    b.Property<string>("FileUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("FileUrl");

                    b.Property<string>("ISBNCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ISBNCode");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ImageUrl");

                    b.Property<int>("PageCount")
                        .HasColumnType("int")
                        .HasColumnName("PageCount");

                    b.Property<int>("ReleaseDate")
                        .HasColumnType("int")
                        .HasColumnName("ReleaseDate");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("EBooks", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("4fa38d56-3575-44ca-ab49-fa734492e642"),
                            AuthorName = "Benjamin Graham",
                            CategoryId = 27,
                            CreatedDate = new DateTime(2024, 5, 8, 12, 29, 31, 517, DateTimeKind.Local).AddTicks(9354),
                            EBookTitle = "Akıllı yatırımcı",
                            FileUrl = "https://res.cloudinary.com/dafqsbtn7/image/upload/v1715005441/to6kexw2ouxpyt4zhs5r.pdf",
                            ISBNCode = "9789759038472",
                            ImageUrl = "https://res.cloudinary.com/dafqsbtn7/image/upload/v1715095690/mbk5rgfpdem0x20ixrin.jpg",
                            PageCount = 343,
                            ReleaseDate = 1977
                        },
                        new
                        {
                            Id = new Guid("8803a79b-fb10-4bc0-a726-45491e8a541b"),
                            AuthorName = "Reşat Nuri Güntekin",
                            CategoryId = 3,
                            CreatedDate = new DateTime(2024, 5, 8, 12, 29, 31, 517, DateTimeKind.Local).AddTicks(9364),
                            EBookTitle = "Çalıkuşu",
                            FileUrl = "https://res.cloudinary.com/dafqsbtn7/raw/upload/v1714905358/jfiix2ymv4igm7trfife.pdf",
                            ISBNCode = "9789751027689",
                            ImageUrl = "https://res.cloudinary.com/dafqsbtn7/image/upload/v1715095690/mbk5rgfpdem0x20ixrin.jpg",
                            PageCount = 544,
                            ReleaseDate = 1988
                        },
                        new
                        {
                            Id = new Guid("2583810b-e2bf-41de-8faa-a88409df1849"),
                            AuthorName = "Matt Haig",
                            CategoryId = 3,
                            CreatedDate = new DateTime(2024, 5, 8, 12, 29, 31, 517, DateTimeKind.Local).AddTicks(9367),
                            EBookTitle = "Gece Yarısı Kütüphanesi",
                            FileUrl = "https://res.cloudinary.com/dafqsbtn7/raw/upload/v1714833762/g9vhbjuvrnnkfzc7ujab.pdf",
                            ISBNCode = "9786051981833",
                            ImageUrl = "https://res.cloudinary.com/dafqsbtn7/image/upload/v1715095690/mbk5rgfpdem0x20ixrin.jpg",
                            PageCount = 283,
                            ReleaseDate = 2020
                        },
                        new
                        {
                            Id = new Guid("f67e3283-e7f0-4ae9-8cb4-f7c237995669"),
                            AuthorName = "Hanya Yanagihara",
                            CategoryId = 31,
                            CreatedDate = new DateTime(2024, 5, 8, 12, 29, 31, 517, DateTimeKind.Local).AddTicks(9369),
                            EBookTitle = "Değersiz Bir Hayat",
                            FileUrl = "http://res.cloudinary.com/dafqsbtn7/raw/upload/v1715007073/xmfshiyayaq1a7th5ean.pdf",
                            ISBNCode = "9786050949889",
                            ImageUrl = "https://res.cloudinary.com/dafqsbtn7/image/upload/v1715095690/mbk5rgfpdem0x20ixrin.jpg",
                            PageCount = 864,
                            ReleaseDate = 2023
                        },
                        new
                        {
                            Id = new Guid("e41fa03a-66ec-4231-9f9e-a289b8eec252"),
                            AuthorName = "Daniel Kahneman",
                            CategoryId = 31,
                            CreatedDate = new DateTime(2024, 5, 8, 12, 29, 31, 517, DateTimeKind.Local).AddTicks(9372),
                            EBookTitle = "Hızlı ve Yavaş Düşünme",
                            FileUrl = "http://res.cloudinary.com/dafqsbtn7/raw/upload/v1715007315/vckl8qkjawrkph6e5tfm.pdf",
                            ISBNCode = "9789754345315",
                            ImageUrl = "https://res.cloudinary.com/dafqsbtn7/image/upload/v1715095690/mbk5rgfpdem0x20ixrin.jpg",
                            PageCount = 588,
                            ReleaseDate = 2023
                        });
                });

            modelBuilder.Entity("Domain.Entities.EmailAuthenticator", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("ActivationKey")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ActivationKey");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<bool>("IsVerified")
                        .HasColumnType("bit")
                        .HasColumnName("IsVerified");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("EmailAuthenticators", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.FavoriteBook", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<Guid>("BookId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BookId");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<Guid>("MemberId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("MemberId");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.HasIndex("MemberId");

                    b.ToTable("FavoriteBooks", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.FeedBack", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Description");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("FirstName");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("LastName");

                    b.Property<Guid>("MemberId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("MemberId");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("PhoneNumber");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Title");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex("MemberId");

                    b.ToTable("FeedBacks", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.FineDue", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<Guid>("BookIssueId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BookIssueId");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<DateTime>("FineDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("FineDate");

                    b.Property<decimal>("FineTotal")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("FineTotal");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex("BookIssueId");

                    b.ToTable("FineDues", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.FinePayment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<Guid>("MemberId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("MemberId");

                    b.Property<decimal>("PaymentAmount")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("PaymentAmount");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex("MemberId");

                    b.ToTable("FinePayments", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.LibraryStaff", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("BirthDate");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("FirstName");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ImageUrl");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("LastName");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UserId");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "UserId" }, "LibraryStaff_UserID_UK")
                        .IsUnique();

                    b.ToTable("LibraryStaffs", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Location", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<int>("FloorNo")
                        .HasColumnType("int")
                        .HasColumnName("FloorNo");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Name");

                    b.Property<string>("ShelfName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ShelfName");

                    b.Property<int>("ShelfNo")
                        .HasColumnType("int")
                        .HasColumnName("ShelfNo");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Id");

                    b.ToTable("Locations", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("66a89aa8-e8ad-4add-8ec8-df9d372e4833"),
                            CreatedDate = new DateTime(2024, 5, 8, 9, 29, 31, 519, DateTimeKind.Utc).AddTicks(9198),
                            FloorNo = 1,
                            Name = "Merkez Kütüphane",
                            ShelfName = "Tarih Kitapları",
                            ShelfNo = 1
                        },
                        new
                        {
                            Id = new Guid("6347179f-64d6-4c1d-a3ec-62bc02147d73"),
                            CreatedDate = new DateTime(2024, 5, 8, 9, 29, 31, 519, DateTimeKind.Utc).AddTicks(9204),
                            FloorNo = 1,
                            Name = "Merkez Kütüphane",
                            ShelfName = "Psikoloji Kitapları",
                            ShelfNo = 2
                        },
                        new
                        {
                            Id = new Guid("6e3709bf-803e-42d6-818c-c82cf15be93b"),
                            CreatedDate = new DateTime(2024, 5, 8, 9, 29, 31, 519, DateTimeKind.Utc).AddTicks(9206),
                            FloorNo = 1,
                            Name = "Merkez Kütüphane",
                            ShelfName = "Edebiyat Kitapları",
                            ShelfNo = 3
                        },
                        new
                        {
                            Id = new Guid("57cac248-2a17-43bf-a584-9d2e7e966457"),
                            CreatedDate = new DateTime(2024, 5, 8, 9, 29, 31, 519, DateTimeKind.Utc).AddTicks(9209),
                            FloorNo = 1,
                            Name = "Merkez Kütüphane",
                            ShelfName = "Roman Kitapları",
                            ShelfNo = 4
                        },
                        new
                        {
                            Id = new Guid("e6f25590-b816-405f-815f-dd543bcd9bbb"),
                            CreatedDate = new DateTime(2024, 5, 8, 9, 29, 31, 519, DateTimeKind.Utc).AddTicks(9211),
                            FloorNo = 1,
                            Name = "Merkez Kütüphane",
                            ShelfName = "Sanat Kitapları",
                            ShelfNo = 5
                        },
                        new
                        {
                            Id = new Guid("9466485b-9c11-433a-b384-7d6382333193"),
                            CreatedDate = new DateTime(2024, 5, 8, 9, 29, 31, 519, DateTimeKind.Utc).AddTicks(9213),
                            FloorNo = 2,
                            Name = "Merkez Kütüphane",
                            ShelfName = "Mimarlık Kitapları",
                            ShelfNo = 1
                        },
                        new
                        {
                            Id = new Guid("9985ceeb-f15a-4f6b-8814-67b5f6f50bea"),
                            CreatedDate = new DateTime(2024, 5, 8, 9, 29, 31, 519, DateTimeKind.Utc).AddTicks(9219),
                            FloorNo = 2,
                            Name = "Merkez Kütüphane",
                            ShelfName = "Bilim Kitapları",
                            ShelfNo = 2
                        },
                        new
                        {
                            Id = new Guid("d1448ef9-5746-4a25-99b8-eaa1accc7ebc"),
                            CreatedDate = new DateTime(2024, 5, 8, 9, 29, 31, 519, DateTimeKind.Utc).AddTicks(9221),
                            FloorNo = 2,
                            Name = "Merkez Kütüphane",
                            ShelfName = "Teknoloji Kitapları",
                            ShelfNo = 3
                        },
                        new
                        {
                            Id = new Guid("173c9483-082d-46e9-9bf3-6ee28f906508"),
                            CreatedDate = new DateTime(2024, 5, 8, 9, 29, 31, 519, DateTimeKind.Utc).AddTicks(9223),
                            FloorNo = 2,
                            Name = "Merkez Kütüphane",
                            ShelfName = "Felsefe Kitapları",
                            ShelfNo = 4
                        },
                        new
                        {
                            Id = new Guid("59cd3e7e-e103-4eb3-9f04-6ad7a8407952"),
                            CreatedDate = new DateTime(2024, 5, 8, 9, 29, 31, 519, DateTimeKind.Utc).AddTicks(9225),
                            FloorNo = 2,
                            Name = "Merkez Kütüphane",
                            ShelfName = "İşletme Kitapları",
                            ShelfNo = 5
                        },
                        new
                        {
                            Id = new Guid("c4fa4874-380f-494c-af36-423ccdfd2dea"),
                            CreatedDate = new DateTime(2024, 5, 8, 9, 29, 31, 519, DateTimeKind.Utc).AddTicks(9226),
                            FloorNo = 3,
                            Name = "Merkez Kütüphane",
                            ShelfName = "Ekonomi Kitapları",
                            ShelfNo = 1
                        },
                        new
                        {
                            Id = new Guid("80da673f-f14f-4ce2-9d9b-bada572ddf91"),
                            CreatedDate = new DateTime(2024, 5, 8, 9, 29, 31, 519, DateTimeKind.Utc).AddTicks(9228),
                            FloorNo = 3,
                            Name = "Merkez Kütüphane",
                            ShelfName = "Hukuk Kitapları",
                            ShelfNo = 2
                        },
                        new
                        {
                            Id = new Guid("ddacb573-f83a-4fdc-ba85-c647378da1bc"),
                            CreatedDate = new DateTime(2024, 5, 8, 9, 29, 31, 519, DateTimeKind.Utc).AddTicks(9229),
                            FloorNo = 3,
                            Name = "Merkez Kütüphane",
                            ShelfName = "Medya ve İletişim Kitapları",
                            ShelfNo = 3
                        },
                        new
                        {
                            Id = new Guid("814b3b30-e185-4181-964a-bfa2c162c9ac"),
                            CreatedDate = new DateTime(2024, 5, 8, 9, 29, 31, 519, DateTimeKind.Utc).AddTicks(9231),
                            FloorNo = 3,
                            Name = "Merkez Kütüphane",
                            ShelfName = "Müzik Kitapları",
                            ShelfNo = 4
                        },
                        new
                        {
                            Id = new Guid("13b7a063-80a1-4d22-bb03-0f883ef12e85"),
                            CreatedDate = new DateTime(2024, 5, 8, 9, 29, 31, 519, DateTimeKind.Utc).AddTicks(9234),
                            FloorNo = 3,
                            Name = "Merkez Kütüphane",
                            ShelfName = "Sanat ve Tasarım Kitapları",
                            ShelfNo = 5
                        });
                });

            modelBuilder.Entity("Domain.Entities.Magazine", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int")
                        .HasColumnName("CategoryId");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<string>("ISSNCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ISSNCode");

                    b.Property<string>("MagazineTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("MagazineTitle");

                    b.Property<int>("Number")
                        .HasColumnType("int")
                        .HasColumnName("Number");

                    b.Property<Guid>("PublisherId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("PublisherId");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("ReleaseDate");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("PublisherId");

                    b.ToTable("Magazines", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("8d9c7bb2-6baf-4319-a3a3-a2ac3092c8f1"),
                            CategoryId = 2,
                            CreatedDate = new DateTime(2024, 4, 8, 9, 29, 31, 520, DateTimeKind.Utc).AddTicks(7982),
                            ISSNCode = "ISSN1234-5678",
                            MagazineTitle = "Tech Insights",
                            Number = 1,
                            PublisherId = new Guid("cbb7895d-a862-459c-9622-2a2f3f5be99e"),
                            ReleaseDate = new DateTime(2024, 3, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("33ec09e7-b0fa-4f0d-ad57-168fbaf7797d"),
                            CategoryId = 1,
                            CreatedDate = new DateTime(2024, 4, 18, 9, 29, 31, 520, DateTimeKind.Utc).AddTicks(7991),
                            ISSNCode = "ISSN9876-5432",
                            MagazineTitle = "Health & Wellness",
                            Number = 2,
                            PublisherId = new Guid("cbb7895d-a862-459c-9622-2a2f3f5be99e"),
                            ReleaseDate = new DateTime(2024, 4, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("c5939743-2f35-48f8-9858-51f4c1556bf0"),
                            CategoryId = 3,
                            CreatedDate = new DateTime(2024, 4, 23, 9, 29, 31, 520, DateTimeKind.Utc).AddTicks(7994),
                            ISSNCode = "ISSN5555-1234",
                            MagazineTitle = "Finance Focus",
                            Number = 3,
                            PublisherId = new Guid("cbb7895d-a862-459c-9622-2a2f3f5be99e"),
                            ReleaseDate = new DateTime(2024, 4, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3bb08885-5ea5-405d-bcff-3ae7ec0b1911"),
                            CategoryId = 1,
                            CreatedDate = new DateTime(2024, 4, 28, 9, 29, 31, 520, DateTimeKind.Utc).AddTicks(7998),
                            ISSNCode = "ISSN7777-4321",
                            MagazineTitle = "Travel Trends",
                            Number = 4,
                            PublisherId = new Guid("65584687-00c3-4673-b2da-d7c287e12a7c"),
                            ReleaseDate = new DateTime(2024, 4, 20, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("0126025b-b09b-443b-9cb0-f28d61a34a3c"),
                            CategoryId = 2,
                            CreatedDate = new DateTime(2024, 4, 13, 9, 29, 31, 520, DateTimeKind.Utc).AddTicks(8001),
                            ISSNCode = "ISSN8888-9999",
                            MagazineTitle = "Foodie Finds",
                            Number = 5,
                            PublisherId = new Guid("65584687-00c3-4673-b2da-d7c287e12a7c"),
                            ReleaseDate = new DateTime(2024, 4, 8, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("44519209-e844-4908-9d92-75db10400dcc"),
                            CategoryId = 1,
                            CreatedDate = new DateTime(2024, 5, 3, 9, 29, 31, 520, DateTimeKind.Utc).AddTicks(8004),
                            ISSNCode = "ISSN4444-3333",
                            MagazineTitle = "Artistic Expressions",
                            Number = 6,
                            PublisherId = new Guid("96946aaa-597d-4b96-a270-02a46204ebf6"),
                            ReleaseDate = new DateTime(2024, 4, 12, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("46a33882-534b-4c1e-8049-14dd03f7a7fa"),
                            CategoryId = 2,
                            CreatedDate = new DateTime(2024, 4, 26, 9, 29, 31, 520, DateTimeKind.Utc).AddTicks(8007),
                            ISSNCode = "ISSN2222-1111",
                            MagazineTitle = "Fashion Forward",
                            Number = 7,
                            PublisherId = new Guid("9acb5f4c-966e-44a4-8ddb-9fe31fa0090e"),
                            ReleaseDate = new DateTime(2024, 4, 18, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("a6df0f9e-9aa2-49c6-bf84-2033ae97355f"),
                            CategoryId = 1,
                            CreatedDate = new DateTime(2024, 4, 30, 9, 29, 31, 520, DateTimeKind.Utc).AddTicks(8010),
                            ISSNCode = "ISSN9999-8888",
                            MagazineTitle = "Sports Spectacle",
                            Number = 8,
                            PublisherId = new Guid("9acb5f4c-966e-44a4-8ddb-9fe31fa0090e"),
                            ReleaseDate = new DateTime(2024, 4, 22, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("ba3158f1-2c48-47a6-8c64-be115d0b02e1"),
                            CategoryId = 3,
                            CreatedDate = new DateTime(2024, 5, 5, 9, 29, 31, 520, DateTimeKind.Utc).AddTicks(8013),
                            ISSNCode = "ISSN3333-4444",
                            MagazineTitle = "Science Scopes",
                            Number = 9,
                            PublisherId = new Guid("9acb5f4c-966e-44a4-8ddb-9fe31fa0090e"),
                            ReleaseDate = new DateTime(2024, 4, 25, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("f24b9d85-f392-45b1-a8c6-9a42edde0d6a"),
                            CategoryId = 2,
                            CreatedDate = new DateTime(2024, 5, 7, 9, 29, 31, 520, DateTimeKind.Utc).AddTicks(8016),
                            ISSNCode = "ISSN6666-5555",
                            MagazineTitle = "Music Monthly",
                            Number = 10,
                            PublisherId = new Guid("96946aaa-597d-4b96-a270-02a46204ebf6"),
                            ReleaseDate = new DateTime(2024, 4, 28, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Domain.Entities.MagazineAuthor", b =>
                {
                    b.Property<Guid>("AuthorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("AuthorId");

                    b.Property<Guid>("MagazineId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("MagazineId");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("AuthorId", "MagazineId");

                    b.HasIndex("MagazineId");

                    b.ToTable("MagazineAuthors", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Material", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int")
                        .HasColumnName("CategoryId");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<int>("MaterialType")
                        .HasColumnType("int")
                        .HasColumnName("MaterialType");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Name");

                    b.Property<Guid>("PublisherId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("PublisherId");

                    b.Property<int>("ReleaseDate")
                        .HasColumnType("int")
                        .HasColumnName("ReleaseDate");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("PublisherId");

                    b.ToTable("Materials", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.MaterialAuthor", b =>
                {
                    b.Property<Guid>("AuthorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("AuthorId");

                    b.Property<Guid>("MaterialId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("MaterialId");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("AuthorId", "MaterialId");

                    b.HasIndex("MaterialId");

                    b.ToTable("MaterialAuthors", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Member", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2")
                        .HasColumnName("DateOfBirth");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("FirstName");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ImageUrl");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("LastName");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("PhoneNumber");

                    b.Property<bool>("Subscribe")
                        .HasColumnType("bit")
                        .HasColumnName("Subscribe");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("MemberSettingId");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "UserId" }, "Member_UserID_UK")
                        .IsUnique();

                    b.ToTable("Members", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.MemberSetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Language");

                    b.Property<Guid>("MemberId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UiTheme")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("UiTheme");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "MemberId" }, "UK_MemberSettings_MemberId")
                        .IsUnique();

                    b.ToTable("MemberSettings", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.OperationClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Name");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Id");

                    b.ToTable("OperationClaims", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Auth.Admin"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Auth.Read"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Auth.Write"
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Auth.RevokeToken"
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "OperationClaims.Admin"
                        },
                        new
                        {
                            Id = 7,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "OperationClaims.Read"
                        },
                        new
                        {
                            Id = 8,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "OperationClaims.Write"
                        },
                        new
                        {
                            Id = 9,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "OperationClaims.Create"
                        },
                        new
                        {
                            Id = 10,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "OperationClaims.Update"
                        },
                        new
                        {
                            Id = 11,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "OperationClaims.Delete"
                        },
                        new
                        {
                            Id = 12,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "UserOperationClaims.Admin"
                        },
                        new
                        {
                            Id = 13,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "UserOperationClaims.Read"
                        },
                        new
                        {
                            Id = 14,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "UserOperationClaims.Write"
                        },
                        new
                        {
                            Id = 15,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "UserOperationClaims.Create"
                        },
                        new
                        {
                            Id = 16,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "UserOperationClaims.Update"
                        },
                        new
                        {
                            Id = 17,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "UserOperationClaims.Delete"
                        },
                        new
                        {
                            Id = 18,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Users.Admin"
                        },
                        new
                        {
                            Id = 19,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Users.Read"
                        },
                        new
                        {
                            Id = 20,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Users.Write"
                        },
                        new
                        {
                            Id = 21,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Users.Create"
                        },
                        new
                        {
                            Id = 22,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Users.Update"
                        },
                        new
                        {
                            Id = 23,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Users.Delete"
                        },
                        new
                        {
                            Id = 24,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Authors.Admin"
                        },
                        new
                        {
                            Id = 25,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Authors.Read"
                        },
                        new
                        {
                            Id = 26,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Authors.Write"
                        },
                        new
                        {
                            Id = 27,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Authors.Create"
                        },
                        new
                        {
                            Id = 28,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Authors.Update"
                        },
                        new
                        {
                            Id = 29,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Authors.Delete"
                        },
                        new
                        {
                            Id = 30,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Books.Admin"
                        },
                        new
                        {
                            Id = 31,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Books.Read"
                        },
                        new
                        {
                            Id = 32,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Books.Write"
                        },
                        new
                        {
                            Id = 33,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Books.Create"
                        },
                        new
                        {
                            Id = 34,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Books.Update"
                        },
                        new
                        {
                            Id = 35,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Books.Delete"
                        },
                        new
                        {
                            Id = 36,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "BookAuthors.Admin"
                        },
                        new
                        {
                            Id = 37,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "BookAuthors.Read"
                        },
                        new
                        {
                            Id = 38,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "BookAuthors.Write"
                        },
                        new
                        {
                            Id = 39,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "BookAuthors.Create"
                        },
                        new
                        {
                            Id = 40,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "BookAuthors.Update"
                        },
                        new
                        {
                            Id = 41,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "BookAuthors.Delete"
                        },
                        new
                        {
                            Id = 42,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "BookIssues.Admin"
                        },
                        new
                        {
                            Id = 43,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "BookIssues.Read"
                        },
                        new
                        {
                            Id = 44,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "BookIssues.Write"
                        },
                        new
                        {
                            Id = 45,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "BookIssues.Create"
                        },
                        new
                        {
                            Id = 46,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "BookIssues.Update"
                        },
                        new
                        {
                            Id = 47,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "BookIssues.Delete"
                        },
                        new
                        {
                            Id = 48,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "BookReservations.Admin"
                        },
                        new
                        {
                            Id = 49,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "BookReservations.Read"
                        },
                        new
                        {
                            Id = 50,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "BookReservations.Write"
                        },
                        new
                        {
                            Id = 51,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "BookReservations.Create"
                        },
                        new
                        {
                            Id = 52,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "BookReservations.Update"
                        },
                        new
                        {
                            Id = 53,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "BookReservations.Delete"
                        },
                        new
                        {
                            Id = 54,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Categories.Admin"
                        },
                        new
                        {
                            Id = 55,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Categories.Read"
                        },
                        new
                        {
                            Id = 56,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Categories.Write"
                        },
                        new
                        {
                            Id = 57,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Categories.Create"
                        },
                        new
                        {
                            Id = 58,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Categories.Update"
                        },
                        new
                        {
                            Id = 59,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Categories.Delete"
                        },
                        new
                        {
                            Id = 60,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "FineDues.Admin"
                        },
                        new
                        {
                            Id = 61,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "FineDues.Read"
                        },
                        new
                        {
                            Id = 62,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "FineDues.Write"
                        },
                        new
                        {
                            Id = 63,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "FineDues.Create"
                        },
                        new
                        {
                            Id = 64,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "FineDues.Update"
                        },
                        new
                        {
                            Id = 65,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "FineDues.Delete"
                        },
                        new
                        {
                            Id = 66,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "FinePayments.Admin"
                        },
                        new
                        {
                            Id = 67,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "FinePayments.Read"
                        },
                        new
                        {
                            Id = 68,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "FinePayments.Write"
                        },
                        new
                        {
                            Id = 69,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "FinePayments.Create"
                        },
                        new
                        {
                            Id = 70,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "FinePayments.Update"
                        },
                        new
                        {
                            Id = 71,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "FinePayments.Delete"
                        },
                        new
                        {
                            Id = 72,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "LibraryStaffs.Admin"
                        },
                        new
                        {
                            Id = 73,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "LibraryStaffs.Read"
                        },
                        new
                        {
                            Id = 74,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "LibraryStaffs.Write"
                        },
                        new
                        {
                            Id = 75,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "LibraryStaffs.Create"
                        },
                        new
                        {
                            Id = 76,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "LibraryStaffs.Update"
                        },
                        new
                        {
                            Id = 77,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "LibraryStaffs.Delete"
                        },
                        new
                        {
                            Id = 78,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Locations.Admin"
                        },
                        new
                        {
                            Id = 79,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Locations.Read"
                        },
                        new
                        {
                            Id = 80,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Locations.Write"
                        },
                        new
                        {
                            Id = 81,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Locations.Create"
                        },
                        new
                        {
                            Id = 82,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Locations.Update"
                        },
                        new
                        {
                            Id = 83,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Locations.Delete"
                        },
                        new
                        {
                            Id = 84,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Members.Admin"
                        },
                        new
                        {
                            Id = 85,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Members.Read"
                        },
                        new
                        {
                            Id = 86,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Members.Write"
                        },
                        new
                        {
                            Id = 87,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Members.Create"
                        },
                        new
                        {
                            Id = 88,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Members.Update"
                        },
                        new
                        {
                            Id = 89,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Members.Delete"
                        },
                        new
                        {
                            Id = 90,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Publishers.Admin"
                        },
                        new
                        {
                            Id = 91,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Publishers.Read"
                        },
                        new
                        {
                            Id = 92,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Publishers.Write"
                        },
                        new
                        {
                            Id = 93,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Publishers.Create"
                        },
                        new
                        {
                            Id = 94,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Publishers.Update"
                        },
                        new
                        {
                            Id = 95,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Publishers.Delete"
                        },
                        new
                        {
                            Id = 96,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Categories.Admin"
                        },
                        new
                        {
                            Id = 97,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Categories.Read"
                        },
                        new
                        {
                            Id = 98,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Categories.Write"
                        },
                        new
                        {
                            Id = 99,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Categories.Create"
                        },
                        new
                        {
                            Id = 100,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Categories.Update"
                        },
                        new
                        {
                            Id = 101,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Categories.Delete"
                        },
                        new
                        {
                            Id = 102,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Categories.Admin"
                        },
                        new
                        {
                            Id = 103,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Categories.Read"
                        },
                        new
                        {
                            Id = 104,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Categories.Write"
                        },
                        new
                        {
                            Id = 105,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Categories.Create"
                        },
                        new
                        {
                            Id = 106,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Categories.Update"
                        },
                        new
                        {
                            Id = 107,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Categories.Delete"
                        },
                        new
                        {
                            Id = 108,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Books.Admin"
                        },
                        new
                        {
                            Id = 109,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Books.Read"
                        },
                        new
                        {
                            Id = 110,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Books.Write"
                        },
                        new
                        {
                            Id = 111,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Books.Create"
                        },
                        new
                        {
                            Id = 112,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Books.Update"
                        },
                        new
                        {
                            Id = 113,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Books.Delete"
                        },
                        new
                        {
                            Id = 114,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Locations.Admin"
                        },
                        new
                        {
                            Id = 115,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Locations.Read"
                        },
                        new
                        {
                            Id = 116,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Locations.Write"
                        },
                        new
                        {
                            Id = 117,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Locations.Create"
                        },
                        new
                        {
                            Id = 118,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Locations.Update"
                        },
                        new
                        {
                            Id = 119,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Locations.Delete"
                        },
                        new
                        {
                            Id = 120,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Announcements.Admin"
                        },
                        new
                        {
                            Id = 121,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Announcements.Read"
                        },
                        new
                        {
                            Id = 122,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Announcements.Write"
                        },
                        new
                        {
                            Id = 123,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Announcements.Create"
                        },
                        new
                        {
                            Id = 124,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Announcements.Update"
                        },
                        new
                        {
                            Id = 125,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Announcements.Delete"
                        },
                        new
                        {
                            Id = 126,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Materials.Admin"
                        },
                        new
                        {
                            Id = 127,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Materials.Read"
                        },
                        new
                        {
                            Id = 128,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Materials.Write"
                        },
                        new
                        {
                            Id = 129,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Materials.Create"
                        },
                        new
                        {
                            Id = 130,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Materials.Update"
                        },
                        new
                        {
                            Id = 131,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Materials.Delete"
                        },
                        new
                        {
                            Id = 132,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Materials.Admin"
                        },
                        new
                        {
                            Id = 133,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Materials.Read"
                        },
                        new
                        {
                            Id = 134,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Materials.Write"
                        },
                        new
                        {
                            Id = 135,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Materials.Create"
                        },
                        new
                        {
                            Id = 136,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Materials.Update"
                        },
                        new
                        {
                            Id = 137,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Materials.Delete"
                        },
                        new
                        {
                            Id = 138,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "MaterialAuthors.Admin"
                        },
                        new
                        {
                            Id = 139,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "MaterialAuthors.Read"
                        },
                        new
                        {
                            Id = 140,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "MaterialAuthors.Write"
                        },
                        new
                        {
                            Id = 141,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "MaterialAuthors.Create"
                        },
                        new
                        {
                            Id = 142,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "MaterialAuthors.Update"
                        },
                        new
                        {
                            Id = 143,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "MaterialAuthors.Delete"
                        },
                        new
                        {
                            Id = 144,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Catalogs.Admin"
                        },
                        new
                        {
                            Id = 145,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Catalogs.Read"
                        },
                        new
                        {
                            Id = 146,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Catalogs.Write"
                        },
                        new
                        {
                            Id = 147,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Catalogs.Create"
                        },
                        new
                        {
                            Id = 148,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Catalogs.Update"
                        },
                        new
                        {
                            Id = 149,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Catalogs.Delete"
                        },
                        new
                        {
                            Id = 150,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Catalogs.Admin"
                        },
                        new
                        {
                            Id = 151,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Catalogs.Read"
                        },
                        new
                        {
                            Id = 152,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Catalogs.Write"
                        },
                        new
                        {
                            Id = 153,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Catalogs.Create"
                        },
                        new
                        {
                            Id = 154,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Catalogs.Update"
                        },
                        new
                        {
                            Id = 155,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Catalogs.Delete"
                        },
                        new
                        {
                            Id = 156,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Books.Admin"
                        },
                        new
                        {
                            Id = 157,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Books.Read"
                        },
                        new
                        {
                            Id = 158,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Books.Write"
                        },
                        new
                        {
                            Id = 159,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Books.Create"
                        },
                        new
                        {
                            Id = 160,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Books.Update"
                        },
                        new
                        {
                            Id = 161,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Books.Delete"
                        },
                        new
                        {
                            Id = 162,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Catalogs.Admin"
                        },
                        new
                        {
                            Id = 163,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Catalogs.Read"
                        },
                        new
                        {
                            Id = 164,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Catalogs.Write"
                        },
                        new
                        {
                            Id = 165,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Catalogs.Create"
                        },
                        new
                        {
                            Id = 166,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Catalogs.Update"
                        },
                        new
                        {
                            Id = 167,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Catalogs.Delete"
                        },
                        new
                        {
                            Id = 168,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "EBooks.Admin"
                        },
                        new
                        {
                            Id = 169,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "EBooks.Read"
                        },
                        new
                        {
                            Id = 170,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "EBooks.Write"
                        },
                        new
                        {
                            Id = 171,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "EBooks.Create"
                        },
                        new
                        {
                            Id = 172,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "EBooks.Update"
                        },
                        new
                        {
                            Id = 173,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "EBooks.Delete"
                        },
                        new
                        {
                            Id = 174,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Magazines.Admin"
                        },
                        new
                        {
                            Id = 175,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Magazines.Read"
                        },
                        new
                        {
                            Id = 176,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Magazines.Write"
                        },
                        new
                        {
                            Id = 177,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Magazines.Create"
                        },
                        new
                        {
                            Id = 178,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Magazines.Update"
                        },
                        new
                        {
                            Id = 179,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Magazines.Delete"
                        },
                        new
                        {
                            Id = 180,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Materials.Admin"
                        },
                        new
                        {
                            Id = 181,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Materials.Read"
                        },
                        new
                        {
                            Id = 182,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Materials.Write"
                        },
                        new
                        {
                            Id = 183,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Materials.Create"
                        },
                        new
                        {
                            Id = 184,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Materials.Update"
                        },
                        new
                        {
                            Id = 185,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Materials.Delete"
                        },
                        new
                        {
                            Id = 186,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "MagazineAuthors.Admin"
                        },
                        new
                        {
                            Id = 187,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "MagazineAuthors.Read"
                        },
                        new
                        {
                            Id = 188,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "MagazineAuthors.Write"
                        },
                        new
                        {
                            Id = 189,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "MagazineAuthors.Create"
                        },
                        new
                        {
                            Id = 190,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "MagazineAuthors.Update"
                        },
                        new
                        {
                            Id = 191,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "MagazineAuthors.Delete"
                        },
                        new
                        {
                            Id = 192,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "MaterialAuthors.Admin"
                        },
                        new
                        {
                            Id = 193,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "MaterialAuthors.Read"
                        },
                        new
                        {
                            Id = 194,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "MaterialAuthors.Write"
                        },
                        new
                        {
                            Id = 195,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "MaterialAuthors.Create"
                        },
                        new
                        {
                            Id = 196,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "MaterialAuthors.Update"
                        },
                        new
                        {
                            Id = 197,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "MaterialAuthors.Delete"
                        },
                        new
                        {
                            Id = 198,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "EBooks.Admin"
                        },
                        new
                        {
                            Id = 199,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "EBooks.Read"
                        },
                        new
                        {
                            Id = 200,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "EBooks.Write"
                        },
                        new
                        {
                            Id = 201,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "EBooks.Create"
                        },
                        new
                        {
                            Id = 202,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "EBooks.Update"
                        },
                        new
                        {
                            Id = 203,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "EBooks.Delete"
                        },
                        new
                        {
                            Id = 204,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Catalogs.Admin"
                        },
                        new
                        {
                            Id = 205,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Catalogs.Read"
                        },
                        new
                        {
                            Id = 206,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Catalogs.Write"
                        },
                        new
                        {
                            Id = 207,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Catalogs.Create"
                        },
                        new
                        {
                            Id = 208,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Catalogs.Update"
                        },
                        new
                        {
                            Id = 209,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Catalogs.Delete"
                        },
                        new
                        {
                            Id = 210,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Categories.Admin"
                        },
                        new
                        {
                            Id = 211,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Categories.Read"
                        },
                        new
                        {
                            Id = 212,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Categories.Write"
                        },
                        new
                        {
                            Id = 213,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Categories.Create"
                        },
                        new
                        {
                            Id = 214,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Categories.Update"
                        },
                        new
                        {
                            Id = 215,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Categories.Delete"
                        },
                        new
                        {
                            Id = 216,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "EBooks.Admin"
                        },
                        new
                        {
                            Id = 217,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "EBooks.Read"
                        },
                        new
                        {
                            Id = 218,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "EBooks.Write"
                        },
                        new
                        {
                            Id = 219,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "EBooks.Create"
                        },
                        new
                        {
                            Id = 220,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "EBooks.Update"
                        },
                        new
                        {
                            Id = 221,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "EBooks.Delete"
                        },
                        new
                        {
                            Id = 222,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Magazines.Admin"
                        },
                        new
                        {
                            Id = 223,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Magazines.Read"
                        },
                        new
                        {
                            Id = 224,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Magazines.Write"
                        },
                        new
                        {
                            Id = 225,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Magazines.Create"
                        },
                        new
                        {
                            Id = 226,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Magazines.Update"
                        },
                        new
                        {
                            Id = 227,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Magazines.Delete"
                        },
                        new
                        {
                            Id = 228,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "MagazineAuthors.Admin"
                        },
                        new
                        {
                            Id = 229,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "MagazineAuthors.Read"
                        },
                        new
                        {
                            Id = 230,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "MagazineAuthors.Write"
                        },
                        new
                        {
                            Id = 231,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "MagazineAuthors.Create"
                        },
                        new
                        {
                            Id = 232,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "MagazineAuthors.Update"
                        },
                        new
                        {
                            Id = 233,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "MagazineAuthors.Delete"
                        },
                        new
                        {
                            Id = 234,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Materials.Admin"
                        },
                        new
                        {
                            Id = 235,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Materials.Read"
                        },
                        new
                        {
                            Id = 236,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Materials.Write"
                        },
                        new
                        {
                            Id = 237,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Materials.Create"
                        },
                        new
                        {
                            Id = 238,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Materials.Update"
                        },
                        new
                        {
                            Id = 239,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Materials.Delete"
                        },
                        new
                        {
                            Id = 240,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "MaterialAuthors.Admin"
                        },
                        new
                        {
                            Id = 241,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "MaterialAuthors.Read"
                        },
                        new
                        {
                            Id = 242,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "MaterialAuthors.Write"
                        },
                        new
                        {
                            Id = 243,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "MaterialAuthors.Create"
                        },
                        new
                        {
                            Id = 244,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "MaterialAuthors.Update"
                        },
                        new
                        {
                            Id = 245,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "MaterialAuthors.Delete"
                        },
                        new
                        {
                            Id = 246,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "MemberSettings.Admin"
                        },
                        new
                        {
                            Id = 247,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "MemberSettings.Read"
                        },
                        new
                        {
                            Id = 248,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "MemberSettings.Write"
                        },
                        new
                        {
                            Id = 249,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "MemberSettings.Create"
                        },
                        new
                        {
                            Id = 250,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "MemberSettings.Update"
                        },
                        new
                        {
                            Id = 251,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "MemberSettings.Delete"
                        },
                        new
                        {
                            Id = 252,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "MemberSettings.Admin"
                        },
                        new
                        {
                            Id = 253,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "MemberSettings.Read"
                        },
                        new
                        {
                            Id = 254,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "MemberSettings.Write"
                        },
                        new
                        {
                            Id = 255,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "MemberSettings.Create"
                        },
                        new
                        {
                            Id = 256,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "MemberSettings.Update"
                        },
                        new
                        {
                            Id = 257,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "MemberSettings.Delete"
                        },
                        new
                        {
                            Id = 258,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Catalogs.Admin"
                        },
                        new
                        {
                            Id = 259,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Catalogs.Read"
                        },
                        new
                        {
                            Id = 260,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Catalogs.Write"
                        },
                        new
                        {
                            Id = 261,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Catalogs.Create"
                        },
                        new
                        {
                            Id = 262,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Catalogs.Update"
                        },
                        new
                        {
                            Id = 263,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Catalogs.Delete"
                        },
                        new
                        {
                            Id = 264,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "CatalogManagements.Admin"
                        },
                        new
                        {
                            Id = 265,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "CatalogManagements.Read"
                        },
                        new
                        {
                            Id = 266,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "CatalogManagements.Write"
                        },
                        new
                        {
                            Id = 267,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "CatalogManagements.Create"
                        },
                        new
                        {
                            Id = 268,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "CatalogManagements.Update"
                        },
                        new
                        {
                            Id = 269,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "CatalogManagements.Delete"
                        },
                        new
                        {
                            Id = 270,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Magazines.Admin"
                        },
                        new
                        {
                            Id = 271,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Magazines.Read"
                        },
                        new
                        {
                            Id = 272,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Magazines.Write"
                        },
                        new
                        {
                            Id = 273,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Magazines.Create"
                        },
                        new
                        {
                            Id = 274,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Magazines.Update"
                        },
                        new
                        {
                            Id = 275,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Magazines.Delete"
                        },
                        new
                        {
                            Id = 276,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Materials.Admin"
                        },
                        new
                        {
                            Id = 277,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Materials.Read"
                        },
                        new
                        {
                            Id = 278,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Materials.Write"
                        },
                        new
                        {
                            Id = 279,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Materials.Create"
                        },
                        new
                        {
                            Id = 280,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Materials.Update"
                        },
                        new
                        {
                            Id = 281,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Materials.Delete"
                        },
                        new
                        {
                            Id = 282,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Magazines.Admin"
                        },
                        new
                        {
                            Id = 283,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Magazines.Read"
                        },
                        new
                        {
                            Id = 284,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Magazines.Write"
                        },
                        new
                        {
                            Id = 285,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Magazines.Create"
                        },
                        new
                        {
                            Id = 286,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Magazines.Update"
                        },
                        new
                        {
                            Id = 287,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Magazines.Delete"
                        },
                        new
                        {
                            Id = 288,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "SearchCriterias.Admin"
                        },
                        new
                        {
                            Id = 289,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "SearchCriterias.Read"
                        },
                        new
                        {
                            Id = 290,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "SearchCriterias.Write"
                        },
                        new
                        {
                            Id = 291,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "SearchCriterias.Create"
                        },
                        new
                        {
                            Id = 292,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "SearchCriterias.Update"
                        },
                        new
                        {
                            Id = 293,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "SearchCriterias.Delete"
                        },
                        new
                        {
                            Id = 294,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "EBooks.Admin"
                        },
                        new
                        {
                            Id = 295,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "EBooks.Read"
                        },
                        new
                        {
                            Id = 296,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "EBooks.Write"
                        },
                        new
                        {
                            Id = 297,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "EBooks.Create"
                        },
                        new
                        {
                            Id = 298,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "EBooks.Update"
                        },
                        new
                        {
                            Id = 299,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "EBooks.Delete"
                        },
                        new
                        {
                            Id = 300,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "CatalogManagements.Admin"
                        },
                        new
                        {
                            Id = 301,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "CatalogManagements.Read"
                        },
                        new
                        {
                            Id = 302,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "CatalogManagements.Write"
                        },
                        new
                        {
                            Id = 303,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "CatalogManagements.Create"
                        },
                        new
                        {
                            Id = 304,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "CatalogManagements.Update"
                        },
                        new
                        {
                            Id = 305,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "CatalogManagements.Delete"
                        },
                        new
                        {
                            Id = 306,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "CatalogManagements.Admin"
                        },
                        new
                        {
                            Id = 307,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "CatalogManagements.Read"
                        },
                        new
                        {
                            Id = 308,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "CatalogManagements.Write"
                        },
                        new
                        {
                            Id = 309,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "CatalogManagements.Create"
                        },
                        new
                        {
                            Id = 310,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "CatalogManagements.Update"
                        },
                        new
                        {
                            Id = 311,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "CatalogManagements.Delete"
                        },
                        new
                        {
                            Id = 312,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "EBooks.Admin"
                        },
                        new
                        {
                            Id = 313,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "EBooks.Read"
                        },
                        new
                        {
                            Id = 314,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "EBooks.Write"
                        },
                        new
                        {
                            Id = 315,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "EBooks.Create"
                        },
                        new
                        {
                            Id = 316,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "EBooks.Update"
                        },
                        new
                        {
                            Id = 317,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "EBooks.Delete"
                        },
                        new
                        {
                            Id = 318,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "FavoriteBooks.Admin"
                        },
                        new
                        {
                            Id = 319,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "FavoriteBooks.Read"
                        },
                        new
                        {
                            Id = 320,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "FavoriteBooks.Write"
                        },
                        new
                        {
                            Id = 321,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "FavoriteBooks.Create"
                        },
                        new
                        {
                            Id = 322,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "FavoriteBooks.Update"
                        },
                        new
                        {
                            Id = 323,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "FavoriteBooks.Delete"
                        },
                        new
                        {
                            Id = 324,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "FeedBacks.Admin"
                        },
                        new
                        {
                            Id = 325,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "FeedBacks.Read"
                        },
                        new
                        {
                            Id = 326,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "FeedBacks.Write"
                        },
                        new
                        {
                            Id = 327,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "FeedBacks.Create"
                        },
                        new
                        {
                            Id = 328,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "FeedBacks.Update"
                        },
                        new
                        {
                            Id = 329,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "FeedBacks.Delete"
                        },
                        new
                        {
                            Id = 330,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "FeedBacks.Admin"
                        },
                        new
                        {
                            Id = 331,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "FeedBacks.Read"
                        },
                        new
                        {
                            Id = 332,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "FeedBacks.Write"
                        },
                        new
                        {
                            Id = 333,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "FeedBacks.Create"
                        },
                        new
                        {
                            Id = 334,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "FeedBacks.Update"
                        },
                        new
                        {
                            Id = 335,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "FeedBacks.Delete"
                        });
                });

            modelBuilder.Entity("Domain.Entities.OtpAuthenticator", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<bool>("IsVerified")
                        .HasColumnType("bit")
                        .HasColumnName("IsVerified");

                    b.Property<byte[]>("SecretKey")
                        .IsRequired()
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("SecretKey");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("OtpAuthenticators", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Publisher", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Language");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Name");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Id");

                    b.ToTable("Publishers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("cbb7895d-a862-459c-9622-2a2f3f5be99e"),
                            CreatedDate = new DateTime(2024, 5, 8, 9, 29, 31, 523, DateTimeKind.Utc).AddTicks(66),
                            Language = "TR",
                            Name = "Can Yayınları"
                        },
                        new
                        {
                            Id = new Guid("65584687-00c3-4673-b2da-d7c287e12a7c"),
                            CreatedDate = new DateTime(2024, 5, 8, 9, 29, 31, 523, DateTimeKind.Utc).AddTicks(69),
                            Language = "TR",
                            Name = "Kapra Yayıncılık"
                        },
                        new
                        {
                            Id = new Guid("96946aaa-597d-4b96-a270-02a46204ebf6"),
                            CreatedDate = new DateTime(2024, 5, 8, 9, 29, 31, 523, DateTimeKind.Utc).AddTicks(74),
                            Language = "TR",
                            Name = "Alfa Yayınları"
                        },
                        new
                        {
                            Id = new Guid("9acb5f4c-966e-44a4-8ddb-9fe31fa0090e"),
                            CreatedDate = new DateTime(2024, 5, 8, 9, 29, 31, 523, DateTimeKind.Utc).AddTicks(75),
                            Language = "TR",
                            Name = "Timaş Yayınları"
                        },
                        new
                        {
                            Id = new Guid("ceaac2a8-b341-44cd-928c-d472e38a7f20"),
                            CreatedDate = new DateTime(2024, 5, 8, 9, 29, 31, 523, DateTimeKind.Utc).AddTicks(77),
                            Language = "TR",
                            Name = "YKY - Yapı Kredi Yayınları"
                        },
                        new
                        {
                            Id = new Guid("124589ea-4803-490c-9c86-dd68e59b8825"),
                            CreatedDate = new DateTime(2024, 5, 8, 9, 29, 31, 523, DateTimeKind.Utc).AddTicks(78),
                            Language = "TR",
                            Name = "İletişim Yayınları"
                        },
                        new
                        {
                            Id = new Guid("5bce2c0e-36b7-4098-945e-700fc0a1d0c5"),
                            CreatedDate = new DateTime(2024, 5, 8, 9, 29, 31, 523, DateTimeKind.Utc).AddTicks(80),
                            Language = "TR",
                            Name = "Doğan Kitap"
                        },
                        new
                        {
                            Id = new Guid("b8fea0cc-e29a-4028-8b1b-08126eedcecb"),
                            CreatedDate = new DateTime(2024, 5, 8, 9, 29, 31, 523, DateTimeKind.Utc).AddTicks(81),
                            Language = "TR",
                            Name = "Bilgi Yayınevi"
                        },
                        new
                        {
                            Id = new Guid("8ecae9d5-c9c1-4362-96a2-db0231083372"),
                            CreatedDate = new DateTime(2024, 5, 8, 9, 29, 31, 523, DateTimeKind.Utc).AddTicks(83),
                            Language = "TR",
                            Name = "Altın Kitaplar"
                        },
                        new
                        {
                            Id = new Guid("5d604071-905c-4da5-9277-a8c0d17a717b"),
                            CreatedDate = new DateTime(2024, 5, 8, 9, 29, 31, 523, DateTimeKind.Utc).AddTicks(84),
                            Language = "TR",
                            Name = "Everest Yayınları"
                        },
                        new
                        {
                            Id = new Guid("6bb7922f-079e-41e9-bbd2-1be557f30957"),
                            CreatedDate = new DateTime(2024, 5, 8, 9, 29, 31, 523, DateTimeKind.Utc).AddTicks(86),
                            Language = "TR",
                            Name = "Destek Yayınları"
                        },
                        new
                        {
                            Id = new Guid("6b3d2f37-ca03-40b9-8fe6-c890bfdd9cf3"),
                            CreatedDate = new DateTime(2024, 5, 8, 9, 29, 31, 523, DateTimeKind.Utc).AddTicks(87),
                            Language = "TR",
                            Name = "Koridor Yayıncılık"
                        },
                        new
                        {
                            Id = new Guid("5f503f17-5ca7-4a17-b131-6330c7fd52eb"),
                            CreatedDate = new DateTime(2024, 5, 8, 9, 29, 31, 523, DateTimeKind.Utc).AddTicks(88),
                            Language = "TR",
                            Name = "Remzi Kitabevi"
                        },
                        new
                        {
                            Id = new Guid("3f51e2c8-dd62-49be-a384-6af21e614507"),
                            CreatedDate = new DateTime(2024, 5, 8, 9, 29, 31, 523, DateTimeKind.Utc).AddTicks(90),
                            Language = "TR",
                            Name = "Martı Yayınları"
                        },
                        new
                        {
                            Id = new Guid("d72f299e-e695-49c5-94fb-79e382710b91"),
                            CreatedDate = new DateTime(2024, 5, 8, 9, 29, 31, 523, DateTimeKind.Utc).AddTicks(91),
                            Language = "TR",
                            Name = "İthaki Yayınları"
                        },
                        new
                        {
                            Id = new Guid("46266a6c-ed71-4b7a-8367-340f2f3f8e42"),
                            CreatedDate = new DateTime(2024, 5, 8, 9, 29, 31, 523, DateTimeKind.Utc).AddTicks(92),
                            Language = "TR",
                            Name = "Artemis Yayınları"
                        },
                        new
                        {
                            Id = new Guid("53458011-9e2b-4cf9-9647-3a7364c4e8a2"),
                            CreatedDate = new DateTime(2024, 5, 8, 9, 29, 31, 523, DateTimeKind.Utc).AddTicks(94),
                            Language = "TR",
                            Name = "Pegasus Yayınları"
                        },
                        new
                        {
                            Id = new Guid("3cdebc03-bad8-4657-8ecf-f196b55bf223"),
                            CreatedDate = new DateTime(2024, 5, 8, 9, 29, 31, 523, DateTimeKind.Utc).AddTicks(157),
                            Language = "TR",
                            Name = "Epsilon Yayınları"
                        },
                        new
                        {
                            Id = new Guid("e875fb59-639f-4cd8-b2d3-3e222adb9211"),
                            CreatedDate = new DateTime(2024, 5, 8, 9, 29, 31, 523, DateTimeKind.Utc).AddTicks(160),
                            Language = "TR",
                            Name = "Altın Nokta Yayınevi"
                        },
                        new
                        {
                            Id = new Guid("888f4ec1-6d74-4e7e-ad0e-e75d5cfaad86"),
                            CreatedDate = new DateTime(2024, 5, 8, 9, 29, 31, 523, DateTimeKind.Utc).AddTicks(162),
                            Language = "TR",
                            Name = "İş Bankası Kültür Yayınları"
                        });
                });

            modelBuilder.Entity("Domain.Entities.RefreshToken", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("CreatedByIp")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CreatedByIp");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("ExpiresDate");

                    b.Property<string>("ReasonRevoked")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ReasonRevoked");

                    b.Property<string>("ReplacedByToken")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ReplacedByToken");

                    b.Property<string>("RevokedByIp")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("RevokedByIp");

                    b.Property<DateTime?>("RevokedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("RevokedDate");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Token");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("RefreshTokens", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.SearchCriteria", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("AuthorName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("AuthorName");

                    b.Property<string>("AuthorSurname")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("AuthorSurname");

                    b.Property<string>("BookISBNCode")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("BookISBNCode");

                    b.Property<string>("BookTitle")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("BookTitle");

                    b.Property<string>("CategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<string>("EBookAuthorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EBookISBNCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EBookTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LocationsName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LocationsShelfName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MagazineISSNCode")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("MagazineISSNCode");

                    b.Property<string>("MagazineTitle")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("MagazineTitle");

                    b.Property<string>("MaterialName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("MaterialName");

                    b.Property<string>("MemberFirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MemberLastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MembersEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PublisherLanguage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PublisherName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Id");

                    b.ToTable("SearchCriterias", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<int>("AuthenticatorType")
                        .HasColumnType("int")
                        .HasColumnName("AuthenticatorType");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Email");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("PasswordHash");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("PasswordSalt");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Id");

                    b.ToTable("Users", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("8f7dedba-5473-4613-9600-fa4dbb1916cc"),
                            AuthenticatorType = 0,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "narch@kodlama.io",
                            PasswordHash = new byte[] { 155, 169, 99, 240, 95, 96, 177, 16, 4, 124, 238, 147, 107, 117, 165, 205, 53, 255, 78, 159, 127, 109, 154, 245, 249, 126, 50, 76, 118, 146, 2, 244, 181, 22, 179, 10, 137, 103, 171, 159, 8, 11, 134, 17, 150, 136, 45, 210, 240, 136, 130, 89, 231, 79, 243, 52, 77, 173, 18, 253, 13, 177, 128, 219 },
                            PasswordSalt = new byte[] { 190, 153, 10, 86, 176, 219, 78, 215, 209, 74, 193, 229, 9, 67, 73, 41, 176, 20, 173, 181, 213, 181, 66, 68, 173, 7, 255, 148, 112, 80, 118, 119, 205, 49, 199, 0, 253, 238, 15, 111, 102, 175, 213, 190, 229, 78, 254, 214, 225, 115, 100, 173, 220, 86, 100, 184, 24, 227, 213, 66, 98, 90, 159, 228, 234, 20, 150, 114, 60, 22, 5, 230, 1, 162, 147, 142, 208, 23, 15, 205, 97, 182, 48, 137, 62, 149, 212, 255, 244, 37, 239, 113, 61, 14, 65, 236, 98, 1, 138, 198, 215, 222, 98, 59, 106, 254, 236, 0, 231, 86, 52, 108, 241, 120, 85, 140, 179, 59, 48, 83, 62, 84, 234, 239, 116, 135, 153, 36 }
                        });
                });

            modelBuilder.Entity("Domain.Entities.UserOperationClaim", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<int>("OperationClaimId")
                        .HasColumnType("int")
                        .HasColumnName("OperationClaimId");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UserId");

                    b.HasKey("Id");

                    b.HasIndex("OperationClaimId");

                    b.HasIndex("UserId");

                    b.ToTable("UserOperationClaims", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("8cea78e5-c7c0-4999-873c-c8c909e2114c"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OperationClaimId = 1,
                            UserId = new Guid("8f7dedba-5473-4613-9600-fa4dbb1916cc")
                        });
                });

            modelBuilder.Entity("Domain.Entities.Book", b =>
                {
                    b.HasOne("Domain.Entities.Category", "Category")
                        .WithMany("Books")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Location", "Location")
                        .WithMany("Books")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Publisher", "Publisher")
                        .WithMany("Books")
                        .HasForeignKey("PublisherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Location");

                    b.Navigation("Publisher");
                });

            modelBuilder.Entity("Domain.Entities.BookAuthor", b =>
                {
                    b.HasOne("Domain.Entities.Author", "Author")
                        .WithMany("BookAuthors")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Book", "Book")
                        .WithMany("BookAuthors")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("Book");
                });

            modelBuilder.Entity("Domain.Entities.BookIssue", b =>
                {
                    b.HasOne("Domain.Entities.Book", "Book")
                        .WithMany("BookIssues")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Domain.Entities.LibraryStaff", "LibraryStaff")
                        .WithMany("BookIssues")
                        .HasForeignKey("LibraryStaffId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Member", "Member")
                        .WithMany("BookIssues")
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("LibraryStaff");

                    b.Navigation("Member");
                });

            modelBuilder.Entity("Domain.Entities.BookReservation", b =>
                {
                    b.HasOne("Domain.Entities.Book", "Book")
                        .WithMany("BookReservations")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Member", "Member")
                        .WithMany("BookReservations")
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("Member");
                });

            modelBuilder.Entity("Domain.Entities.CatalogManagement", b =>
                {
                    b.HasOne("Domain.Entities.Book", "Book")
                        .WithMany("CatalogManagements")
                        .HasForeignKey("BookId");

                    b.HasOne("Domain.Entities.Catalog", "Catalog")
                        .WithMany("CatalogManagements")
                        .HasForeignKey("CatalogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.EBook", "EBook")
                        .WithMany("CatalogManagements")
                        .HasForeignKey("EBookId");

                    b.HasOne("Domain.Entities.Magazine", "Magazine")
                        .WithMany("CatalogManagements")
                        .HasForeignKey("MagazineId");

                    b.HasOne("Domain.Entities.Material", "Material")
                        .WithMany("CatalogManagements")
                        .HasForeignKey("MaterialId");

                    b.Navigation("Book");

                    b.Navigation("Catalog");

                    b.Navigation("EBook");

                    b.Navigation("Magazine");

                    b.Navigation("Material");
                });

            modelBuilder.Entity("Domain.Entities.EBook", b =>
                {
                    b.HasOne("Domain.Entities.Category", "Category")
                        .WithMany("EBooks")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Domain.Entities.EmailAuthenticator", b =>
                {
                    b.HasOne("Domain.Entities.User", "User")
                        .WithMany("EmailAuthenticators")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Entities.FavoriteBook", b =>
                {
                    b.HasOne("Domain.Entities.Book", "Book")
                        .WithMany("FavoriteBooks")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Member", "Member")
                        .WithMany("FavoriteBooks")
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("Member");
                });

            modelBuilder.Entity("Domain.Entities.FeedBack", b =>
                {
                    b.HasOne("Domain.Entities.Member", "Member")
                        .WithMany()
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Member");
                });

            modelBuilder.Entity("Domain.Entities.FineDue", b =>
                {
                    b.HasOne("Domain.Entities.BookIssue", "BookIssue")
                        .WithMany("FineDues")
                        .HasForeignKey("BookIssueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BookIssue");
                });

            modelBuilder.Entity("Domain.Entities.FinePayment", b =>
                {
                    b.HasOne("Domain.Entities.Member", "Member")
                        .WithMany("FinePayments")
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Member");
                });

            modelBuilder.Entity("Domain.Entities.LibraryStaff", b =>
                {
                    b.HasOne("Domain.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Entities.Magazine", b =>
                {
                    b.HasOne("Domain.Entities.Category", "Category")
                        .WithMany("Magazines")
                        .HasForeignKey("CategoryId");

                    b.HasOne("Domain.Entities.Publisher", "Publisher")
                        .WithMany("Magazines")
                        .HasForeignKey("PublisherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Publisher");
                });

            modelBuilder.Entity("Domain.Entities.MagazineAuthor", b =>
                {
                    b.HasOne("Domain.Entities.Author", "Author")
                        .WithMany("MagazineAuthors")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Magazine", "Magazine")
                        .WithMany("MagazineAuthors")
                        .HasForeignKey("MagazineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("Magazine");
                });

            modelBuilder.Entity("Domain.Entities.Material", b =>
                {
                    b.HasOne("Domain.Entities.Category", "Category")
                        .WithMany("Materials")
                        .HasForeignKey("CategoryId");

                    b.HasOne("Domain.Entities.Publisher", "Publisher")
                        .WithMany("Materials")
                        .HasForeignKey("PublisherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Publisher");
                });

            modelBuilder.Entity("Domain.Entities.MaterialAuthor", b =>
                {
                    b.HasOne("Domain.Entities.Author", "Author")
                        .WithMany("MaterialAuthors")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Material", "Material")
                        .WithMany("MaterialAuthors")
                        .HasForeignKey("MaterialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("Material");
                });

            modelBuilder.Entity("Domain.Entities.Member", b =>
                {
                    b.HasOne("Domain.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Entities.MemberSetting", b =>
                {
                    b.HasOne("Domain.Entities.Member", "Member")
                        .WithOne("MemberSetting")
                        .HasForeignKey("Domain.Entities.MemberSetting", "MemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Member");
                });

            modelBuilder.Entity("Domain.Entities.OtpAuthenticator", b =>
                {
                    b.HasOne("Domain.Entities.User", "User")
                        .WithMany("OtpAuthenticators")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Entities.RefreshToken", b =>
                {
                    b.HasOne("Domain.Entities.User", "User")
                        .WithMany("RefreshTokens")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Entities.UserOperationClaim", b =>
                {
                    b.HasOne("Domain.Entities.OperationClaim", "OperationClaim")
                        .WithMany()
                        .HasForeignKey("OperationClaimId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.User", "User")
                        .WithMany("UserOperationClaims")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OperationClaim");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Entities.Author", b =>
                {
                    b.Navigation("BookAuthors");

                    b.Navigation("MagazineAuthors");

                    b.Navigation("MaterialAuthors");
                });

            modelBuilder.Entity("Domain.Entities.Book", b =>
                {
                    b.Navigation("BookAuthors");

                    b.Navigation("BookIssues");

                    b.Navigation("BookReservations");

                    b.Navigation("CatalogManagements");

                    b.Navigation("FavoriteBooks");
                });

            modelBuilder.Entity("Domain.Entities.BookIssue", b =>
                {
                    b.Navigation("FineDues");
                });

            modelBuilder.Entity("Domain.Entities.Catalog", b =>
                {
                    b.Navigation("CatalogManagements");
                });

            modelBuilder.Entity("Domain.Entities.Category", b =>
                {
                    b.Navigation("Books");

                    b.Navigation("EBooks");

                    b.Navigation("Magazines");

                    b.Navigation("Materials");
                });

            modelBuilder.Entity("Domain.Entities.EBook", b =>
                {
                    b.Navigation("CatalogManagements");
                });

            modelBuilder.Entity("Domain.Entities.LibraryStaff", b =>
                {
                    b.Navigation("BookIssues");
                });

            modelBuilder.Entity("Domain.Entities.Location", b =>
                {
                    b.Navigation("Books");
                });

            modelBuilder.Entity("Domain.Entities.Magazine", b =>
                {
                    b.Navigation("CatalogManagements");

                    b.Navigation("MagazineAuthors");
                });

            modelBuilder.Entity("Domain.Entities.Material", b =>
                {
                    b.Navigation("CatalogManagements");

                    b.Navigation("MaterialAuthors");
                });

            modelBuilder.Entity("Domain.Entities.Member", b =>
                {
                    b.Navigation("BookIssues");

                    b.Navigation("BookReservations");

                    b.Navigation("FavoriteBooks");

                    b.Navigation("FinePayments");

                    b.Navigation("MemberSetting")
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.Entities.Publisher", b =>
                {
                    b.Navigation("Books");

                    b.Navigation("Magazines");

                    b.Navigation("Materials");
                });

            modelBuilder.Entity("Domain.Entities.User", b =>
                {
                    b.Navigation("EmailAuthenticators");

                    b.Navigation("OtpAuthenticators");

                    b.Navigation("RefreshTokens");

                    b.Navigation("UserOperationClaims");
                });
#pragma warning restore 612, 618
        }
    }
}
